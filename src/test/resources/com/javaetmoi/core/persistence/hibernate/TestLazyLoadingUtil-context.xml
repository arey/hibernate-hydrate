<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context-3.1.xsd
              http://www.springframework.org/schema/jdbc
              http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

  <!-- Configuration to support system testing the lazy loading util -->

  <!-- Enable @Autowired annotation -->
  <context:annotation-config/>
    
  <!-- Creates an in-memory database populated with a DBUnit dataset -->
  <jdbc:embedded-database id="dataSource" type="H2" />

  <!-- A Hibernate SessionFactory for mapping Accounts and Restaurants from object to relation tables -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <!-- Detect entities used by the test -->
    <property name="packagesToScan" value="com.javaetmoi.core.persistence.hibernate.*" />
    <property name="hibernateProperties">
      <value>
<!--         hibernate.format_sql=true -->
        hibernate.show_sql=true
        hibernate.hbm2ddl.auto=create-drop
        hibernate.generate_statistics=true
      </value>
    </property>
  </bean>

  <!-- A transaction manager for working with Hibernate SessionFactories -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"
    p:sessionFactory-ref="sessionFactory" />

  <!-- Spring template class that simplifies programmatic transaction management -->
  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager" />
  </bean>

  <!-- Spring helper class that simplifies Hibernate data access code -->

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" c:dataSource-ref="dataSource" />

  <bean id="dbUnitLoader" class="com.javaetmoi.core.persistence.hibernate.DBUnitLoader" />

</beans>
